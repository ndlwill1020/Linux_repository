对于阻塞的socket:
当socket的接收缓冲区中没有数据时，read调用会一直阻塞住，直到有数据到来才返回。
当socket缓冲区中的数据量小于期望读取的数据量时，返回实际读取的字节数。
当sockt的接收缓冲区中的数据大于期望读取的字节数时，读取期望读取的字节数，返回实际读取的长度。

对于非阻塞socket:
socket的接收缓冲区中有没有数据，read调用都会立刻返回。
当接收缓冲区中有数据时，与阻塞socket有数据的情况是一样的.
当接收缓冲区中没有数据，则返回错误号为EWOULDBLOCK,表示该操作本来应该阻塞的，但是由于本socket为非阻塞的socket，因此立刻返回，遇到这样的情况，可
以在下次接着去尝试读取。如果返回值是其它负值，则表明读取错误。

非阻塞的read调用一般这样写:
nread = read(sock_fd, buffer, len);
if (nread < 0)
{
	//read recv
	返回－1:
	1.读的过程遇到中断，errno置为EINTR
	2.errno置为EWOULDBLOCK  表示没有读到数据
	3.表示读取失败
	
	if (errno == EWOULDBLOCK)//EAGAIN 等价于 EWOULDBLOCK
    {
   		//表示没有读到数据
  	}else if (errno == EINTR) {
  		//表示中断 
  	} else{
  		//表示读取失败
  	}
}else if (nread == 0) {
	return 0;//读完 对端关闭
} else {
	return nread;//读到数据长度
}